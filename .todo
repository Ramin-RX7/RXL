[MAIN]
    ☐ @med @easy Remove str.format()  (Raising AttributeError when calling it)
    ☐ @med @easy EOL error in red
    ☐ @high @hard Improve Exception Catching when runing file
    ☐ @med @easy Ignore module loading output error
    ?  @easy Check for cache in local directory of RXL (not relative to running file)
    ?  @easy Blank line before all errors
    ?✘  @easy Cache use `hash` of file instead of `mdftime` :: Takes time to import hashlib
    ✘?  A file to repair files (save all files in a zipfile)
    ✘?  Stop Imports
    ✘  No Break if there is python code in Base Lines
    ✔ @med @easy Array should have rest of the members as None if not all is given
    ✔ @high @easy Save cache in the file directory instead of cwd
    ✔ @high @easy Convert relative file paths to absolute
    ✔ @high @easy Annotations and Documentation (Docstring/Help)
    ✔ @low @easy apply the own type of iterable after using apply()
    ✔ @high @easy Change names from `RX` to `RXL`
    ✔ @high @norm Better `test` implementation
    ✔ Better terminal argument parser implementation (maybe even using 3rd party modules)
    ✔ @easy Using __pycache__ dir for as cache dir
    ✔ @high @norm @RXL-Lib better `array` implementation

    Out-of-Code:
        ☐ @easy @alpha Update RXL_CSG
        ☐ @hard @alpha add a README
        ☐ @low @easy Run file with double clicking

    Compile implementation:
        ☐ @med @norm @alpha Switch to `nuitka` from `pyinstaller` and `cxfreeze`
        ☐ .exe doesn't accept args in `pyinstaller`
        ☐ @low @easy "apply" instead of "map" --> Does not work when compiling with "pyinstaller"

    Load Modules:
        ☐ @med What happens if we use cache and loaded module has changed
        ☐ @med Load modules with default Options
        ✘ switch-case works fine in normal run but is not translated when loading
        ☐ @critical @med `load` is unsafe (as it will be run from terminal)

    Full debug:
        ☐ @med Synchronize all DEBUGs
        ☐ @hard @beta Debug with running linters


    Options:
        ☐ @low @easy Ignore Reloading LOADED_PACKAGES Option
        ✘ @med @easy Make Dict for "if args.option" in Get_Args()



[Syntax]
    ☐ @med @norm increment and decrement operators (++/--)
    ?  check import instead of load
        if a module is found with rx/rxl extension, import that
    ? change `do while` loop syntax to just simply add a `do ` before `while`
        + it is easier to read
        + easier to implement
    ☐ foreach:  `foreach i:items` or `foreach i of items`
    ☐ @low @norm @beta Check syntax erros with fuzzy string matching
    ☐ @med @easy Using re.compile instead of re.match/re.search
    ☐ @med @easy Check lines for all conditions until there's nothing to translate
    ☐ @med @easy `Syntax` Conditions Order (By Usage)
    ☐ @high @hard Console support RX syntax ( '\n'.join(Syntax([line])) )
    ☐ @high @hard Split line by strings, check_syntax spliteds ,connect them again
            ( get ''/"" parts out, then use .replace() )
    ☐ @high @hard Function to check if expression is not in Quotes
            func, Check_Type, &memory, until, unless, foreach
    ☐ @high @hard Not all conditions should be 'elif' in Syntax()
    ☐ @low @easy Use re.X as flag for better regex
    ?  @easy "until & unless & foreach & func" replace or regex
    ?  &&  ---  ||
    ✘ @high @hard There couldnt be nested Switch-Case statements
    ✔ @high @easy 'foreach' New Syntax:  "foreach iterable[item]:"

    $ family:
        ☐ @easy $check & $ $checkwait should be combined and be in the same "if" in Syntax()
            also $test
        ☐ @easy $call: accept args ('with')
        ☐ checkwait: add delay and maximum attempt number
        ☐ @easy $checkwait: make while true to only break when there's no exception
            extra lines that are needed in "check" and "checkwait" should be removed
        ?  All `$commands` be in one condition (faster or not?)

    Include:
        ☐ Re-implementation
        ☐ @med @easy *:*
        ☐ @med @easy class:*
        ☐ @high @norm Very Very Slow
        ☐ @med @hard Wrong translation when using '#'



[Definde-Structure]
    ☐ allow-reload implementation
    ☐ @beta lib-version implementation
    ? Remove `print` and set it by default to stylized
    ?✘ make a module out of defined structures and add `from module import *`
        (so only one line would be added to the file)
    ✔ improve regex



[New Features]
    ☐ create_MiniStd implementation
    ☐ @med @hard Add/Remove/Change some built-in objects methods ('forbiddenfruit')
        ☐ lock and unlock iterables
    ☐ dotted-dict
        easiest way is to set `Addict` as default `dict` (still {} will be the problem)
    ☐ generate:yield(:None)
    ✔ map (-> apply)
    ☐ @med @norm @beta Static-Class
    ☐ @med @norm @beta @RXL-Lib Enums
    ☐ @med @norm @beta @RXL-Lib Dataclasses

    CONSTs:
        ?  option to directly push Const class/func into file or load with `inspect` inside of the file?
        ☐ @med @hard Constants can not be defined in more than one line



[Config]
    a file named `RXLconfig.toml`
    different config types:  Default/Global/Project
    importable with a syntax:
        `config {type}` (where type can be global/project/default)
    Configs list:
        Verbose, Debug, Cache default values when not given in terminal
        Lib-Name, Print, Func-Type-Checker, End-Exit
        default python path (for python runs like nuitka)
        pre-run command   (also a condition e.g: only run when `file` arg is given)
        post-run command  (also a condition e.g: only run when `file` arg is given)
        Shortcut to files (run files without giving the path to the file)



[Docs]
    runtime:
    translation:
        ☐ Go more into details of how each syntax are translated
    usage:
    code:



[Extension]
    ☐ @high @hard @beta Recreate the extension from scratch
        (by now it is only a copy of `python` extension with some additions)
    ?  @easy Clear the screen in extension run (? get operating system for cls/clear)
    ?  Correct color for Options in extension (and also ignore cases)
    ☐ @med @easy Internet class functions



[Canopy]
    ☐ @high Remaining Syntax:
        Type-Scanner, foreach, func, const, do_while, $checkwait
